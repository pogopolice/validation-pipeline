{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Builds the AWS CloudFormation Validation Pipeline solution using the AWS VPC QuickStart as a source repository",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Notification Settings"
                    },
                    "Parameters": [
                        "NotificationEmail"
                    ]
                },
                {
                    "Label": {
                        "default": "Stack Creation Settings"
                    },
                    "Parameters": [
                        "StackCreationRoleArn"
                    ]
                }
            ],
            "ParameterLabels": {
                "NotificationEmail": {
                    "default": "Primary Email"
                },
                "StackCreationRoleArn": {
                    "default": "Create stack role ARN"
                }
            }
        }
    },
    "Parameters": {
        "NotificationEmail": {
            "Description": "Email address to send pipeline notifications to",
            "Type": "String",
            "Default": ""
        },
        "StackCreationRoleArn": {
            "Description": "Role used to launch cloudformation stacks, if blank a new role will be created",
            "Type": "String",
            "Default": ""
        }
    },
    "Mappings": {
        "Functions": {
            "AnonymousReporting": {
                "S3Key": "anon_reporting.zip"
            }
        },
        "General": {
            "CodeRepo": {
                "S3BucketPrefix": "solutions-",
                "S3KeyPrefix": "aws-cloudformation-validation-pipeline/v1.0/"
            },
            "SendAnonymousData": {
                "Enabled": "Yes"
            },
            "AbsoluteBucketName": {
                "Enabled": "No"
            },
            "DemoSource": {
                "RepoUrl": "",
                "RepoBranch": "master",
                "S3Bucket": "solutions-",
                "S3Key": "aws-cloudformation-validation-pipeline/v1.0/demo_source.zip"
            }
        }
    },
    "Conditions": {
        "CreateStackCreationRole": {
            "Fn::Equals": [
                {
                    "Ref": "StackCreationRoleArn"
                },
                ""
            ]
        },
        "EnableAnonReporting": {
            "Fn::Equals": [
                {
                    "Fn::FindInMap": [
                        "General",
                        "SendAnonymousData",
                        "Enabled"
                    ]
                },
                "Yes"
            ]
        },
        "UseRelativeBucket": {
            "Fn::Equals": [
                {
                    "Fn::FindInMap": [
                        "General",
                        "AbsoluteBucketName",
                        "Enabled"
                    ]
                },
                "No"
            ]
        }
    },
    "Resources": {
        "Services": {
            "DependsOn": "CloneRepo",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "StackCreationRoleArn": {
                        "Fn::If": [
                            "CreateStackCreationRole",
                            {
                                "Fn::GetAtt": [
                                    "StackCreationRole",
                                    "Arn"
                                ]
                            },
                            {
                                "Ref": "StackCreationRoleArn"
                            }
                        ]
                    }
                },
                "TemplateURL": {
                    "Fn::Join": [
                        "",
                        [
                            "https://s3.amazonaws.com/",
                            {
                                "Fn::FindInMap": [
                                    "General",
                                    "CodeRepo",
                                    "S3BucketPrefix"
                                ]
                            },
                            {
                                "Fn::If": [
                                    "UseRelativeBucket",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "/",
                            {
                                "Fn::FindInMap": [
                                    "General",
                                    "CodeRepo",
                                    "S3KeyPrefix"
                                ]
                            },
                            "central-microservices.template"
                        ]
                    ]
                }
            }
        },
        "Pipeline": {
            "DependsOn": "Services",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "EmailPrimary": {
                        "Ref": "NotificationEmail"
                    },
                    "CodeCommitRepoName": {
                        "Fn::GetAtt": [
                            "CloneRepo",
                            "Outputs.CodeCommitRepoName"
                        ]
                    },
                    "SourceRepoBranch": {
                                "Fn::FindInMap": [
                                    "General",
                                    "DemoSource",
                                    "RepoBranch"
                                ]
                            },
                    "StackCreationRoleArn": {
                        "Fn::If": [
                            "CreateStackCreationRole",
                            {
                                "Fn::GetAtt": [
                                    "StackCreationRole",
                                    "Arn"
                                ]
                            },
                            {
                                "Ref": "StackCreationRoleArn"
                            }
                        ]
                    },
                    "PreCreateTest1": "Lint_Template",
                    "PostCreateTest1": "Test_Connectivity"
                },
                "TemplateURL": {
                    "Fn::Join": [
                        "",
                        [
                            "https://s3.amazonaws.com/",
                            {
                                "Fn::FindInMap": [
                                    "General",
                                    "CodeRepo",
                                    "S3BucketPrefix"
                                ]
                            },
                            {
                                "Fn::If": [
                                    "UseRelativeBucket",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "/",
                            {
                                "Fn::FindInMap": [
                                    "General",
                                    "CodeRepo",
                                    "S3KeyPrefix"
                                ]
                            },
                            "main-pipeline.template"
                        ]
                    ]
                }
            }
        },
        "CloneRepo": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "SourceRepoUrl": {
                                "Fn::FindInMap": [
                                    "General",
                                    "DemoSource",
                                    "RepoUrl"
                                ]
                            },
                    "SourceRepoBranch": {
                                "Fn::FindInMap": [
                                    "General",
                                    "DemoSource",
                                    "RepoBranch"
                                ]
                            },
                    "SourceS3Bucket": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Fn::FindInMap": [
                                    "General",
                                    "DemoSource",
                                    "S3Bucket"
                                ]
                            },
                            {
                                "Fn::If": [
                                    "UseRelativeBucket",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                        ]
                    ]
                    },
                    "SourceS3Key": {
                                "Fn::FindInMap": [
                                    "General",
                                    "DemoSource",
                                    "S3Key"
                                ]
                            }
                },
                "TemplateURL": {
                    "Fn::Join": [
                        "",
                        [
                            "https://s3.amazonaws.com/",
                            {
                                "Fn::FindInMap": [
                                    "General",
                                    "CodeRepo",
                                    "S3BucketPrefix"
                                ]
                            },
                            {
                                "Fn::If": [
                                    "UseRelativeBucket",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            },
                            "/",
                            {
                                "Fn::FindInMap": [
                                    "General",
                                    "CodeRepo",
                                    "S3KeyPrefix"
                                ]
                            },
                            "clone-repo.template"
                        ]
                    ]
                }
            }
        },
        "StackCreationRole": {
            "Condition": "CreateStackCreationRole",
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "cloudformation.amazonaws.com"
                                ]
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "root",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:AllocateAddress",
                                        "ec2:AssociateAddress",
                                        "ec2:AssociateDhcpOptions",
                                        "ec2:AssociateRouteTable",
                                        "ec2:AttachInternetGateway",
                                        "ec2:AuthorizeSecurityGroupEgress",
                                        "ec2:AuthorizeSecurityGroupIngress",
                                        "ec2:CreateDhcpOptions",
                                        "ec2:CreateInternetGateway",
                                        "ec2:CreateNatGateway",
                                        "ec2:CreateNetworkAcl",
                                        "ec2:CreateNetworkAclEntry",
                                        "ec2:CreateRoute",
                                        "ec2:CreateRouteTable",
                                        "ec2:CreateSecurityGroup",
                                        "ec2:CreateSubnet",
                                        "ec2:CreateVpc",
                                        "ec2:CreateVpcEndpoint",
                                        "ec2:DeleteDhcpOptions",
                                        "ec2:DeleteInternetGateway",
                                        "ec2:DeleteNatGateway",
                                        "ec2:DeleteNetworkAcl",
                                        "ec2:DeleteNetworkAclEntry",
                                        "ec2:DeleteRoute",
                                        "ec2:DeleteRouteTable",
                                        "ec2:DeleteSecurityGroup",
                                        "ec2:DeleteSubnet",
                                        "ec2:DeleteVpc",
                                        "ec2:DeleteVpcEndpoints",
                                        "ec2:DescribeAddresses",
                                        "ec2:DescribeAvailabilityZones",
                                        "ec2:DescribeKeyPairs",
                                        "ec2:DescribeVpcs",
                                        "ec2:DescribeVpcEndpoints",
                                        "ec2:DescribeDhcpOptions",
                                        "ec2:DescribeInternetGateways",
                                        "ec2:DescribeRouteTables",
                                        "ec2:DescribeSubnets",
                                        "ec2:DescribeNetworkAcls",
                                        "ec2:DescribeNatGateways",
                                        "ec2:DetachInternetGateway",
                                        "ec2:DetachNetworkInterface",
                                        "ec2:DisassociateAddress",
                                        "ec2:DisassociateRouteTable",
                                        "ec2:RunInstances",
                                        "ec2:TerminateInstances",
                                        "ec2:ModifyVpcAttribute",
                                        "ec2:ModifySubnetAttribute",
                                        "ec2:ModifyVpcEndpoint",
                                        "ec2:createTags",
                                        "ec2:ReplaceNetworkAclAssociation",
                                        "ec2:ReleaseAddress",
                                        "cloudformation:CreateStack",
                                        "cloudformation:DeleteStack",
                                        "cloudformation:DescribeStackEvents",
                                        "cloudformation:DescribeStacks",
                                        "cloudformation:GetTemplateSummary",
                                        "cloudformation:SetStackPolicy",
                                        "cloudformation:ValidateTemplate",
                                        "cloudformation:UpdateStack",
                                        "s3:GetObject"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "AnonReporting": {
            "Condition": "EnableAnonReporting",
            "Type": "Custom::LoadLambda",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "AnonReportingLambda",
                        "Arn"
                    ]
                },
                "SolutionID": "SO0025m"
            }
        },
        "AnonReportingRole": {
            "Condition": "EnableAnonReporting",
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "Anon_Reporting_Permissions",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:logs:",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":log-group:/aws/lambda/*"
                                            ]
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "AnonReportingLambda": {
            "Condition": "EnableAnonReporting",
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "anon_reporting.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "AnonReportingRole",
                        "Arn"
                    ]
                },
                "Description": "CloudFormation Validation Pipeline: CloudFormation custom resource function invoked during CloudFormation create, update, and delete stack operations.",
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Fn::FindInMap": [
                                        "General",
                                        "CodeRepo",
                                        "S3BucketPrefix"
                                    ]
                                },
                                {
                                "Fn::If": [
                                    "UseRelativeBucket",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    {
                                        "Ref": "AWS::NoValue"
                                    }
                                ]
                            }
                            ]
                        ]
                    },
                    "S3Key": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Fn::FindInMap": [
                                        "General",
                                        "CodeRepo",
                                        "S3KeyPrefix"
                                    ]
                                },
                                {
                                    "Fn::FindInMap": [
                                        "Functions",
                                        "AnonymousReporting",
                                        "S3Key"
                                    ]
                                }
                            ]
                        ]
                    }
                },
                "Runtime": "python2.7",
                "Timeout": "60"
            }
        }
    }
}
